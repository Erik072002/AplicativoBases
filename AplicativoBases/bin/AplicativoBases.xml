<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AplicativoBases</name>
    </assembly>
    <members>
        <member name="M:AplicativoBases.Controllers.AreasController.Get">
            <summary>
             Muestra todos los Aeropuerto
             </summary>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.AreasController.Get(System.Int32)">
            <summary>
             Obtener la salida de Aeropuerto por un id
             </summary>
             <param name="id"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.AreasController.Post(AplicativoBases.Models.Areas)">
            <summary>
             Crear un Aeropuerto
             </summary>
             <param name="asiento"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.AreasController.Put(AplicativoBases.Models.Areas)">
            <summary>
             Modificar un Aeropuerto
             </summary>
             <param name="AeropuertoModificado"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.AreasController.Delete(System.Int32)">
            <summary>
             Eliminar un Aeropuerto
             </summary>
             <param name="id"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EmpleadoController.Get">
            <summary>
             Muestra todos los Empleados
            </summary>
            <returns>JSON Empleados</returns>
            <response code="200">Devuelve la lista de empleados</response>
            <response code="404">Si no se encuentra ningún registro</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EmpleadoController.Get(System.Int32)">
            <summary>
             Obtener un Empleado por ID
            </summary>
            <param name="id"></param>
            <returns>JSON Empleado</returns>
            <response code="200">Devuelve el empleado encontrado</response>
            <response code="404">Si no se encuentra el empleado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EmpleadoController.Post(AplicativoBases.Models.Empleado)">
            <summary>
             Crear un nuevo Empleado
            </summary>
            <param name="empleado"></param>
            <returns>JSON del empleado creado</returns>
            <response code="200">Empleado creado correctamente</response>
            <response code="400">Error al crear el empleado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EmpleadoController.Put(AplicativoBases.Models.Empleado)">
            <summary>
             Modificar un Empleado existente
            </summary>
            <param name="empleadoModificado"></param>
            <returns>JSON del empleado actualizado</returns>
            <response code="200">Empleado actualizado</response>
            <response code="404">Empleado no encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EmpleadoController.Delete(System.Int32)">
            <summary>
             Eliminar un Empleado por ID
            </summary>
            <param name="id"></param>
            <returns>JSON del empleado eliminado</returns>
            <response code="200">Empleado eliminado</response>
            <response code="404">Empleado no encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EMPLEADO_PLANILLAController.Get">
            <summary>
            Muestra todos los registros de EMPLEADO_PLANILLA
            </summary>
            <returns>JSON EMPLEADO_PLANILLA</returns>
            <response code="200">Devuelve los valores encontrados</response>
            <response code="404">Si no se encuentran valores</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EMPLEADO_PLANILLAController.Get(System.Int32,System.Int32)">
            <summary>
            Obtiene un registro de EMPLEADO_PLANILLA por ID de empleado y planilla
            </summary>
            <param name="idEmpleado"></param>
            <param name="idPlanillaDePago"></param>
            <returns>JSON EMPLEADO_PLANILLA</returns>
            <response code="200">Devuelve el valor encontrado</response>
            <response code="404">Si no se encuentra el valor</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EMPLEADO_PLANILLAController.Post(AplicativoBases.Models.EMPLEADO_PLANILLA)">
            <summary>
            Crea un nuevo registro de EMPLEADO_PLANILLA
            </summary>
            <param name="registro"></param>
            <returns>JSON EMPLEADO_PLANILLA</returns>
            <response code="200">Devuelve el valor creado</response>
            <response code="400">Si el modelo es inválido</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EMPLEADO_PLANILLAController.Put(AplicativoBases.Models.EMPLEADO_PLANILLA)">
            <summary>
            Modifica un registro de EMPLEADO_PLANILLA
            </summary>
            <param name="registroModificado"></param>
            <returns>JSON EMPLEADO_PLANILLA</returns>
            <response code="200">Devuelve el valor modificado</response>
            <response code="400">Si el modelo es inválido</response>
        </member>
        <member name="M:AplicativoBases.Controllers.EMPLEADO_PLANILLAController.Delete(System.Int32,System.Int32)">
            <summary>
            Elimina un registro de EMPLEADO_PLANILLA
            </summary>
            <param name="idEmpleado"></param>
            <param name="idPlanillaDePago"></param>
            <returns>JSON EMPLEADO_PLANILLA</returns>
            <response code="200">Devuelve el valor eliminado</response>
            <response code="404">Si no se encuentra el valor</response>
        </member>
        <member name="M:AplicativoBases.Controllers.HistoricoDeAreasController.Post(AplicativoBases.Models.HistoricoDeAreas)">
            <summary>
             Crear un HistoricoDeAreas
             </summary>
             <param name="historico"></param>
            <returns>JSON HistoricoDeAreas</returns>
            <response code = "200"> Devuelve el valor creado</response>
            <response code = "404"> Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.HistoricoDeAreasController.Put(AplicativoBases.Models.HistoricoDeAreas)">
            <summary>
             Modificar un HistoricoDeAreas
             </summary>
             <param name="historicoModificado"></param>
            <returns>JSON HistoricoDeAreas</returns>
            <response code = "200"> Devuelve el valor modificado</response>
            <response code = "404"> Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.HistoricoDeAreasController.Delete(System.Int32,System.Int32)">
            <summary>
             Eliminar un HistoricoDeAreas
             </summary>
             <param name="idAreaDeTrabajo"></param>
             <param name="idEmpleado"></param>
            <returns>JSON HistoricoDeAreas</returns>
            <response code = "200"> Devuelve el valor eliminado</response>
            <response code = "404"> Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_CargosController.Get">
            <summary>
            Muestra todos los registros de Historico_De_Cargos
            </summary>
            <returns>JSON de Historico_De_Cargos</returns>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_CargosController.Get(System.Int32)">
            <summary>
            Obtener un registro de Historico_De_Cargos por ID
            </summary>
            <param name="id"></param>
            <returns>JSON de Historico_De_Cargos</returns>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_CargosController.Post(AplicativoBases.Models.Historico_De_Cargos)">
            <summary>
            Crear un nuevo registro en Historico_De_Cargos
            </summary>
            <param name="historico"></param>
            <returns>JSON de Historico_De_Cargos</returns>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_CargosController.Put(AplicativoBases.Models.Historico_De_Cargos)">
            <summary>
            Modificar un registro de Historico_De_Cargos
            </summary>
            <param name="historicoModificado"></param>
            <returns>JSON de Historico_De_Cargos</returns>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_CargosController.Delete(System.Int32)">
            <summary>
            Eliminar un registro de Historico_De_Cargos
            </summary>
            <param name="id"></param>
            <returns>JSON de Historico_De_Cargos</returns>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_JefesController.Get">
            <summary>
            Muestra todos los Historico_De_Jefes
            </summary>
            <returns>JSON Historico_De_Jefes</returns>
            <response code="200">Devuelve el valor encontrado</response>
            <response code="404">Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_JefesController.Get(System.Int32,System.Int32)">
            <summary>
            Obtener la salida de Historico_De_Jefes por idEmpleadoJefe e idEmpleadoJefe1
            </summary>
            <param name="idEmpleadoJefe"></param>
            <param name="idEmpleadoJefe1"></param>
            <returns>JSON Historico_De_Jefes</returns>
            <response code="200">Devuelve el valor encontrado</response>
            <response code="404">Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_JefesController.Post(AplicativoBases.Models.Historico_De_Jefes)">
            <summary>
            Crear un Historico_De_Jefes
            </summary>
            <param name="historico"></param>
            <returns>JSON Historico_De_Jefes</returns>
            <response code="200">Devuelve el valor creado</response>
            <response code="404">Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_JefesController.Put(AplicativoBases.Models.Historico_De_Jefes)">
            <summary>
            Modificar un Historico_De_Jefes
            </summary>
            <param name="historicoModificado"></param>
            <returns>JSON Historico_De_Jefes</returns>
            <response code="200">Devuelve el valor modificado</response>
            <response code="404">Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.Historico_De_JefesController.Delete(System.Int32,System.Int32)">
            <summary>
            Eliminar un Historico_De_Jefes
            </summary>
            <param name="idEmpleadoJefe"></param>
            <param name="idEmpleadoJefe1"></param>
            <returns>JSON Historico_De_Jefes</returns>
            <response code="200">Devuelve el valor eliminado</response>
            <response code="404">Si el valor no es encontrado</response>
        </member>
        <member name="M:AplicativoBases.Controllers.LibroController.Get">
            <summary>
            Muestra todos los libros
            </summary>
            <returns>JSON con todos los libros</returns>
            <response code="200">Devuelve la lista de libros</response>
            <response code="404">Si no se encuentra información</response>
        </member>
        <member name="M:AplicativoBases.Controllers.LibroController.Get(System.Int32)">
            <summary>
            Obtiene un libro por su ID
            </summary>
            <param name="id">ID del libro</param>
            <returns>JSON del libro</returns>
            <response code="200">Devuelve el libro encontrado</response>
            <response code="404">Si no se encuentra el libro</response>
        </member>
        <member name="M:AplicativoBases.Controllers.LibroController.Post(AplicativoBases.Models.Libro)">
            <summary>
            Crea un nuevo libro
            </summary>
            <param name="libro">Objeto libro a agregar</param>
            <returns>JSON del libro creado</returns>
            <response code="200">Devuelve el libro creado</response>
            <response code="400">Si el modelo es inválido</response>
        </member>
        <member name="M:AplicativoBases.Controllers.LibroController.Put(AplicativoBases.Models.Libro)">
            <summary>
            Modifica un libro existente
            </summary>
            <param name="libroModificado">Libro con nuevos datos</param>
            <returns>JSON del libro actualizado</returns>
            <response code="200">Libro actualizado correctamente</response>
            <response code="404">Si el libro no existe</response>
        </member>
        <member name="M:AplicativoBases.Controllers.LibroController.Delete(System.Int32)">
            <summary>
            Elimina un libro por ID
            </summary>
            <param name="id">ID del libro</param>
            <returns>Libro eliminado</returns>
            <response code="200">Libro eliminado correctamente</response>
            <response code="404">Si el libro no existe</response>
        </member>
        <member name="M:AplicativoBases.Controllers.PlanillaDePagoController.Get">
            <summary>
            Muestra todas las PlanillaDePago
            </summary>
            <returns>JSON PlanillaDePago</returns>
            <response code="200">Devuelve los valores encontrados</response>
            <response code="404">Si no se encuentran valores</response>
        </member>
        <member name="M:AplicativoBases.Controllers.PlanillaDePagoController.Get(System.Int32)">
            <summary>
            Obtiene una PlanillaDePago por id
            </summary>
            <param name="id"></param>
            <returns>JSON PlanillaDePago</returns>
            <response code="200">Devuelve el valor encontrado</response>
            <response code="404">Si no se encuentra el valor</response>
        </member>
        <member name="M:AplicativoBases.Controllers.PlanillaDePagoController.Post(AplicativoBases.Models.PlanillaDePago)">
            <summary>
            Crea una nueva PlanillaDePago
            </summary>
            <param name="planilla"></param>
            <returns>JSON PlanillaDePago</returns>
            <response code="200">Devuelve el valor creado</response>
            <response code="400">Si el modelo es inválido</response>
        </member>
        <member name="M:AplicativoBases.Controllers.PlanillaDePagoController.Put(AplicativoBases.Models.PlanillaDePago)">
            <summary>
            Modifica una PlanillaDePago
            </summary>
            <param name="planillaModificada"></param>
            <returns>JSON PlanillaDePago</returns>
            <response code="200">Devuelve el valor modificado</response>
            <response code="400">Si el modelo es inválido</response>
        </member>
        <member name="M:AplicativoBases.Controllers.PlanillaDePagoController.Delete(System.Int32)">
            <summary>
            Elimina una PlanillaDePago por id
            </summary>
            <param name="id"></param>
            <returns>JSON PlanillaDePago</returns>
            <response code="200">Devuelve el valor eliminado</response>
            <response code="404">Si no se encuentra el valor</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.ClienteController.Get">
            <summary>
            Muestra todos los Clientes
            </summary>
            <returns>JSON Cliente</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.ClienteController.Get(System.Int32)">
            <summary>
            Obtener Cliente por id
            </summary>
            <param name="id"></param>
            <returns>JSON Cliente</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.ClienteController.Post(AplicativoBases.Models.Cliente)">
            <summary>
            Crear Cliente
            </summary>
            <param name="cliente"></param>
            <returns>JSON Cliente</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.ClienteController.Put(System.Int32,AplicativoBases.Models.Cliente)">
            <summary>
            Modificar Cliente
            </summary>
            <param name="id">ID del cliente</param>
            <param name="clienteModificado">Cliente con datos modificados</param>
            <returns>JSON Cliente</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.ClienteController.Delete(System.Int32)">
            <summary>
            Eliminar Cliente
            </summary>
            <param name="id"></param>
            <returns>JSON Cliente</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_FacturacionController.Get">
            <summary>
            Muestra todos los registros de Libro_has_Facturacion
            </summary>
            <returns>JSON Libro_has_Facturacion</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_FacturacionController.Get(System.Int32,System.Int32)">
            <summary>
            Obtener un registro específico por Libro_idLibro y Facturacion_idFacturacion
            </summary>
            <param name="libro_idLibro"></param>
            <param name="facturacion_idFacturacion"></param>
            <returns>JSON Libro_has_Facturacion</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_FacturacionController.Post(AplicativoBases.Models.Libro_has_Facturacion)">
            <summary>
            Crear un nuevo registro en Libro_has_Facturacion
            </summary>
            <param name="libroFacturacion"></param>
            <returns>JSON Libro_has_Facturacion</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_FacturacionController.Put(AplicativoBases.Models.Libro_has_Facturacion)">
            <summary>
            Modificar un registro existente
            </summary>
            <param name="modificado"></param>
            <returns>JSON Libro_has_Facturacion</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_FacturacionController.Delete(System.Int32,System.Int32)">
            <summary>
            Eliminar un registro específico
            </summary>
            <param name="libro_idLibro"></param>
            <param name="facturacion_idFacturacion"></param>
            <returns>JSON Libro_has_Facturacion</returns>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_PrestamosController.Get">
            <summary>
            Muestra todos los registros de Libro_has_Prestamos
            </summary>
            <returns>JSON Libro_has_Prestamos</returns>
            <response code = "200">Devuelve la lista</response>
            <response code = "404">Si no se encuentra información</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_PrestamosController.Get(System.Int32,System.Int32)">
            <summary>
            Obtener un registro específico por idLibro e idPrestamos
            </summary>
            <param name="idLibro"></param>
            <param name="idPrestamos"></param>
            <returns>JSON Libro_has_Prestamos</returns>
            <response code = "200">Devuelve el valor encontrado</response>
            <response code = "404">Si no se encuentra</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_PrestamosController.Post(AplicativoBases.Models.Libro_has_Prestamos)">
            <summary>
            Crear un nuevo registro en Libro_has_Prestamos
            </summary>
            <param name="libroPrestamo"></param>
            <returns>JSON Libro_has_Prestamos</returns>
            <response code = "200">Devuelve el valor creado</response>
            <response code = "400">Si los datos son inválidos</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_PrestamosController.Put(AplicativoBases.Models.Libro_has_Prestamos)">
            <summary>
            Modificar un registro existente
            </summary>
            <param name="modificado"></param>
            <returns>JSON Libro_has_Prestamos</returns>
            <response code = "200">Devuelve el valor actualizado</response>
            <response code = "404">Si no se encuentra</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.Libro_has_PrestamosController.Delete(System.Int32,System.Int32)">
            <summary>
            Eliminar un registro específico
            </summary>
            <param name="idLibro"></param>
            <param name="idPrestamos"></param>
            <returns>JSON Libro_has_Prestamos</returns>
            <response code = "200">Devuelve el valor eliminado</response>
            <response code = "404">Si no se encuentra</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.PersonasController.Get">
            <summary>
             Muestra todos los Aeropuerto
             </summary>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.PersonasController.Get(System.Int32)">
            <summary>
             Obtener la salida de Aeropuerto por un id
             </summary>
             <param name="id"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.PersonasController.Post(AplicativoBases.Models.Personas)">
            <summary>
             Crear un Aeropuerto
             </summary>
             <param name="asiento"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.PersonasController.Put(AplicativoBases.Models.Personas)">
            <summary>
             Modificar un Aeropuerto
             </summary>
             <param name="AeropuertoModificado"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
        <member name="M:ProyectoAeropuerto.Controllers.PersonasController.Delete(System.Int32)">
            <summary>
             Eliminar un Aeropuerto
             </summary>
             <param name="id"></param>
            <returns>JSON Aeropuerto</returns>
            <response code = "200"> Devuelve el valor encontrado</response>
            <response code = "404"> Si  el valor no es encontrado</response>
        </member>
    </members>
</doc>
